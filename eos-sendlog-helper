#!/bin/bash

echo2()   { echo "$@" >&2 ; }
printf2() { printf "$@" >&2 ; }
DIE()     { echo2 "$progname: error: $1"; exit 1; }

Usage() {
    cat <<EOF >&2
$progname sends the input (stdin) to a pastebin service.

Usage: $progname [options]
Options:
   --0x0         Uses 0x0.st
   --dpaste      Uses dpaste.com
   --termbin     Uses termbin.com
   --help, -h    This help
Without options the services are tried in order until one succeeds or all fail.
Trial order: 0x0 dpaste termbin.
EOF
    [ "$1" ] && exit "$1"
}

0x0()         { $curl -F'file=@-' https://0x0.st ; }
dpaste()      { $curl -F "content=<-" https://dpaste.com/api/v2/ ; }
termbin()     { [ -x /bin/nc ] || return 1; nc -w $timeout termbin.com 9999; }
ix.io()       { $curl -F'f:1=<-'  ix.io ; }                            # 2023/12/04: fails??
wgetpaste()   { wgetpaste -n anonymous ; }                             # 2023/12/04: fails, no more maintained??

Tee() {
    local srv="$1"
    echo "$input" | "$srv" > $log
    return $?
}

GeneralWarning() {
    declare -A urls=(
        [0x0]="https://0x0.st"
        [dpaste]="https://dpaste.com"
        [termbin]="termbin.com"
    )
    local txt=""

    txt+="You are about to send <i>your data</i> to a pastebin service on the internet.\n"
    txt+="Anyone will be able to see the data.\n"
    txt+="Please make sure you are not sending any unwanted information.\n\n"
    txt+="If you want to manage the information you've sent already, please contact <b>${urls[$srv]}</b>.\n"

    local cmd=(
        eos_yad --form --title="Warning" --text="$txt"
        --button="yad-quit!!Do not send":1 --button="yad-execute!!Continue sending":3
    )

    "${cmd[@]}"

    case "$?" in
        3) echo "Sending." >&2 ;;
        *) echo "Nothing sent." >&2; exit 0 ;;
    esac
}

Main() {
    local -r progname="${0##*/}"
    local -r log=/tmp/tmp.$progname.log
    local -r timeout=10                               # max seconds to wait when sending to pastebin
    local -r curl="/bin/curl --fail -Lsm $timeout"
    local count=0
    local services=()
    local testing=no

    while true ; do
        case "$1" in
            --testing) testing=yes ;;
            --0x0 | --dpaste | --termbin)  services+=("${1:2}"); break ;;
            --help | -h)                   Usage 0 ;;
            -*)                            echo2 "Unsupported option '$1'"; exit 1 ;;
            *) services=(
                     0x0
                     dpaste
                     termbin
                 )
               break
               ;;
        esac
        shift
    done

    if [ "$testing" = "no" ] ; then
        local -r input=$(cat)
    else
        local -r input="this is a test"
    fi
    [ "$input" ] || DIE "No input!"

    source /usr/share/endeavouros/scripts/eos-script-lib-yad || exit 1

    for srv in "${services[@]}" ; do
        GeneralWarning
        if Tee "$srv" ; then
            cat $log
            return 0
        fi
        ((count++))
        [ $count -lt ${#services[@]} ] && echo2 "==> Info: ${srv} failed, trying ${services[$count]} ..."
    done
    DIE "configured pastebin services failed!"
}

Main "$@"
